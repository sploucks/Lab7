/***************************************************************************
*
*  Programmers and Purdue Email Addresses:
*  1. jone1890@purdue.edu
*  2. louckss@purdue.edu
*  3. jense105@purdue.edu (delete line if no third partner)
*
*  Lab #: 07
*
*  Academic Integrity Statement:
*
*  We have not used source code obtained from any other unauthorized source,
*  either modified or unmodified.  Neither have we provided access to our code
*  to another. The effort we are submitting is our own original work.
*
*  Day, Time, Location of Lab: Thursday, 3:30-4:20, Hampton 3314
*
*  Program Description:
*  Program
*
***************************************************************************/

#include <stdio.h>
#include <math.h>

//function declarations
int userInput();
int getDigits(int);
int octalConv(int, int);
int parityThing();
void octalOutput(int, int, int);

int main()
{
  //local declarations
  int decVal; //decimal value of the number
  int digits; //
  int octVal; //octal value of the number
  int decCount; //amount of digits in the decimal number
  int octCount; //number of digits in the octal
  int evenChange; //number of digits in the even 
  int oddChange; //
  
  decVal = userInput();
  digits = getDigits(decVal);
  
  octalOutput(octVal, evenChange, oddChange);
  
	return 0;
}

/***************************************************************************
*
*  Function Information
*
*  Name of Function: userInput
*
*  Function Return Type: int
*
*  Parameters (list data type, name, and comment one per line):
*
*  Function Description:
*  Function takes user input for the decimal input for the user given number
*
***************************************************************************/
int userInput()
{
  int decVal;

  do
  {
    printf("Enter decimal value -> ");
    scanf("%d", &decVal);

    if (decVal < 0)
    {
      printf("\nError! The decimal value provided should be non-negative.\n\n");
    }
  }while (decVal < 0);

  return(decVal);
}
   
/***************************************************************************
*
*  Function Information
*
*  Name of Function: getDigits
*
*  Function Return Type: int
*
*  Parameters (list data type, name, and comment one per line):
*
*  Function Description:
*  Function takes user input for the decimal input and returns number of digits for that value
*
***************************************************************************/
int getDigits(int decimalVal)
{
  int count;
  count = 0;
  while (decimalVal != 0)
  {
    decimalVal /= 10;
    ++count;
  }
  return(count);
}

/***************************************************************************
*
*  Function Information
*
*  Name of Function: octalConv
*
*  Function Return Type: int
*
*  Parameters (list data type, name, and comment one per line):
*
*  Function Description:
*  Function takes user input for the decimal input and converts to octal
*
***************************************************************************/
int octalConv(int decVal, int digits)
{
  int quotient;
  int count;
  int result;
  
  do
  {
    quotient = decVal / 8;
    remainder = decVal % 8;
    result += remainder * pow(10,count);
    decVal = quotient;
    ++count;
  }
  while (count < digits);
  
  return(result);
}
  
/***************************************************************************
*
*  Function Information
*
*  Name of Function: parityThing
*
*  Function Return Type: int
*
*  Parameters (list data type, name, and comment one per line):
*
*  Function Description:
*  Function takes user input for the decimal input and octal count and then
*  outputs 
*
***************************************************************************/
int parityThing(int decVal, int octVal, int decCount, int octCount, int *evenChange, int *oddChange)
{
  //local declarations
  int decTemp = decimalVal; //temporary storage of decimal value
  int octTemp = octalVal; //temporary storage of octal value
  int 
  int decEven; //number of even digits in the decimal value
  int decOdd; //number of odd digits in the decimal value
  int octEven; //number of even digits in the octal value
  int octOdd; //number of odd digits in the octal value
  int count = 0; //count of the while loop
  
  //while loop for bringing out the digits
  while (count < 11)
  {
    
    
    decVal /= 10;
    octVal /= 10;
    
    
    ++count;
  }
  
  //set the even and odd changes
  *evenChange = octEven - decEven;
  *oddChange = octOdd - decOdd;
}
  
  







/***************************************************************************
*
*  Function Information
*
*  Name of Function: octalOutput
*
*  Function Return Type: void
*
*  Parameters (list data type, name, and comment one per line):
*   1. int octVal -- uses the value of the octal value
*   2. int evenChange -- uses the value for how many even change numbers there are 
*   3. int oddChange -- use sthe value for how many odd change numbhers there are 
*  Function Description: This function outputs the octal value, the even number change, and the odd number change.
*  
*
***************************************************************************/
void octalOutput (int octVal, int evenChange, int oddChange)
{
  printf("Octal equivalent: %d\n", octVal);
  printf("Odd digit change: %d\n", oddChange);
  printf("Even digit change: %d", evenChange);
}





